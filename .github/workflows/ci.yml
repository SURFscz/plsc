name: CI

on:
  push:
  schedule:
    - cron: "0 5  * * mon"

permissions: { }

jobs:
  plsc-test:

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'

    services:
      ldap:
        image: osixia/openldap:latest
        ports:
          - 389:389
        volumes:
          - ${{ github.workspace }}/misc/schema:/opt/misc/schema
        options: --name ldap
        env:
          LDAP_SEED_INTERNAL_SCHEMA_PATH: /opt/misc/schema
          LDAP_DOMAIN: services.sram.tld
          LDAP_ADMIN_USERNAME: admin
          LDAP_ADMIN_PASSWORD: secret
          LDAP_CONFIG_PASSWORD: config
          LDAP_BASE_DN: dc=services,dc=sram,dc=tld
          LDAP_TLS: true

    steps:
      - name: Checkout
        uses: actions/checkout@master
        with:
          path: plsc

      - name: Restart LDAP container
        uses: docker://docker
        with:
          args: docker restart ldap

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y libsasl2-dev libldap2-dev ldap-utils

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        working-directory: ./plsc
        run: |
          python3 -m pip install --upgrade pip flake8 gera2ld-pyserve
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Check syntax
        working-directory: ./plsc
        run: |
          flake8 .

      - name: ldap - Initialization...
        working-directory: ./plsc
        run: >
          sleep 5;
          ldapwhoami -H ${LDAP_URL} -D ${LDAP_BIND_DN} -w ${LDAP_ADMIN_PASSWORD};
          for f in access eduPerson voPerson groupOfMembers config;
          do
            ldapadd -H ${LDAP_URL}
                    -D cn=admin,cn=config
                    -w ${LDAP_CONFIG_PASSWORD}
                    -f etc/ldif/$f.ldif;
          done;
        env:
          LDAP_URL: ldap://localhost:389
          LDAP_ADMIN_PASSWORD: secret
          LDAP_CONFIG_PASSWORD: config
          LDAP_BASE_DN: dc=services,dc=sram,dc=tld
          LDAP_BIND_DN: cn=admin,dc=services,dc=sram,dc=tld

      # Setup tmate session
      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3

      - name: Run pytest...
        working-directory: ./plsc
        run: |
          export PYTHONPATH="."
          pytest
        env:
          LDAP_URL: ldap://localhost:389
          LDAP_ADMIN_PASSWORD: secret
          LDAP_BASE_DN: dc=services,dc=sram,dc=tld
          LDAP_BIND_DN: cn=admin,dc=services,dc=sram,dc=tld

      - name: Dump ldap...
        working-directory: ./plsc
        run:
          ldapsearch -x -H ${LDAP_URL} -b ${LDAP_BASE_DN} -s sub objectclass=organizationalUnit
        env:
          LDAP_URL: ldap://localhost:389
          LDAP_BASE_DN: dc=services,dc=sram,dc=tld



