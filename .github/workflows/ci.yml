name: CI

on: [push]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.6]

    services:
      ldap:
        image: bitnami/openldap
        env:
          LDAP_ADMIN_USERNAME: admin
          LDAP_ADMIN_PASSWORD: secret
          LDAP_ROOT: dc=sram,dc=tld
          LDAP_PORT_NUMBER: 1389

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: sudo apt-get install -y libsasl2-dev libldap2-dev

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Load ldap - check connection
      uses: docker://bitnami/openldap
      with:
        entrypoint: /bin/bash
        args: -c "(/opt/bitnami/openldap/bin/ldapwhoami -H ldap://ldap:1389 -D cn=admin,dc=sram,dc=tld -w secret||sleep 5)"

    - name: Load ldap - cleanup ldap
      uses: docker://bitnami/openldap
      with:
        entrypoint: /bin/bash
        args: -c "/opt/bitnami/openldap/bin/ldapdelete -H ldap://ldap:1389 -D cn=admin,dc=sram,dc=tld -w secret -r ou=users,dc=sram,dc=tld"

    - name: Load ldap - load ldif
      uses: docker://bitnami/openldap
      with:
        entrypoint: /bin/bash
        args: -c "for f in eduPerson sczGroup voPerson sram sram_services; do /opt/bitnami/openldap/bin/ldapadd -H ldap://ldap:1389 -D cn=admin,dc=sram,dc=tld -w secret -f etc/ldif/$f.ldif; done"

    - name: Load ldap - check structure
      uses: docker://bitnami/openldap
      with:
        entrypoint: /bin/bash
        args: -c "/opt/bitnami/openldap/bin/ldapsearch -H ldap://ldap:1389 -b dc=sram,dc=tld -D cn=admin,dc=sram,dc=tld -w secret"

    - name: Prepare plsc.yml file
      run: |
        cat <<EOF >/tmp/plsc-test.yml
        ---
        ldap:
          src:
            uri: ${LDAP_URL}
            basedn: ${LDAP_BASE_DN}
            binddn: ${LDAP_BIND_DN}
            passwd: ${LDAP_ADMIN_PASSWORD}
          dst:
            uri: ${LDAP_URL}
            basedn: dc=services,${LDAP_BASE_DN}
            binddn: ${LDAP_BIND_DN}
            passwd: ${LDAP_ADMIN_PASSWORD}
        sbs:
          src:
            host: http://${SBS_HOST}:${SBS_PORT}
            user: sysread
            passwd: ${SBS_PASSWORD}
        pwd: changethispassword
        uid: 1000
        gid: 1000
        EOF
      env:
        LDAP_URL: ldap://ldap:1389
        LDAP_ADMIN_PASSWORD: secret
        LDAP_BASE_DN: dc=sram,dc=tld
        LDAP_BIND_DN: cn=admin,dc=sram,dc=tld
        SBS_HOST: localhost
        SBS_PORT: 3080
        SBS_PASSWORD: secret

    - name: Check plsc.yml file...
      run: cat /tmp/plsc-test.yml

    - name: Run slp ordered...
      uses: docker://bitnami/openldap
      run: python slp-ordered.py /tmp/plsc-test.yml

    - name: Run slp flat...
      uses: docker://bitnami/openldap
      run: python slp-ordered.py /tmp/plsc-test.yml

    - name: Run pytest
      uses: docker://bitnami/openldap
      run: python pytest tests
      env:
        LDAP_URL: ldap://ldap:1389
        LDAP_ADMIN_PASSWORD: secret
        LDAP_BASE_DN: dc=sram,dc=tld
        LDAP_BIND_DN: cn=admin,dc=sram,dc=tld
        SBS_HOST: localhost
        SBS_PORT: 3080
        SBS_PASSWORD: secret

    - name: Search ldap - show results !
      uses: docker://bitnami/openldap
      with:
        entrypoint: /bin/bash
        args: -c "/opt/bitnami/openldap/bin/ldapsearch -H ldap://ldap:1389 -b dc=sram,dc=tld -D cn=admin,dc=sram,dc=tld -w secret"


